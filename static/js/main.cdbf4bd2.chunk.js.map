{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","App.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","services/pixabayApi.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","index.js","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","imageName","setImageName","className","s","searchbar","form","event","preventDefault","trim","toast","error","type","button","button_label","reactIcons","input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","api","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","image","onImageClick","src","webformatURL","alt","tag","ImageGalleryItem_image","onClick","largeImageURL","propType","PropTypes","shape","string","tags","func","Button","handleClickButton","modalRoot","document","querySelector","Modal","toggleModal","largeImg","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","target","Spiner","Loader","color","height","width","Status","ImageGallery","pageScroll","images","setImages","setPage","setError","loading","setLoading","status","setStatus","showModal","setShowModal","setLargeImg","pixabayApi","data","hits","length","catch","finally","Title","map","id","App","scrollTo","top","documentElement","scrollHeight","behavior","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cdbf4bd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3d28w\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__2rwA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2Ccp3\",\"Modal\":\"Modal_Modal__1yTxV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__8P7Vh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2PsR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2k8JK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__3XGa0\",\"form\":\"Searchbar_form__4DWZ4\",\"button\":\"Searchbar_button__2rYQI\",\"input\":\"Searchbar_input__qn0A-\"};","import s from './Searchbar.module.css';\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = event => {\n    setImageName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (imageName.trim() === '') {\n      toast.error('Please enter name of search');\n      return;\n    }\n\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.button_label}>\n            <ImSearch className={s.reactIcons} />\n          </span>\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={imageName}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  handleNameChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  imageName: PropTypes.string,\n};\n","export function fetchImage(imageName, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${imageName}&page=${page}&key=23281316-63779c8712cdbe982715f9396&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(\n      new Error(`There are no images for name ${imageName}`),\n    );\n  });\n}\n\nconst api = { fetchImage };\n\nexport default api;\n","import React from 'react';\nimport s from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ image, onImageClick }) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={image.webformatURL}\n        alt={image.tag}\n        className={s.ImageGalleryItem_image}\n        onClick={() => onImageClick(image.largeImageURL)}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propType = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string,\n    largeImageURL: PropTypes.string,\n    tags: PropTypes.string,\n  }),\n  onImageClick: PropTypes.func,\n};\n","import s from './Button.module.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default function Button({ handleClickButton }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={handleClickButton}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  handleClickButton: PropTypes.func,\n};\n","import s from './Modal.module.css';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ toggleModal, largeImg }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      toggleModal();\n    }\n  };\n\n  const handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleOverlayClick}>\n      <div className={s.Modal}>\n        <img src={largeImg} alt=\"\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func,\n  largeImg: PropTypes.string,\n};\n","import React from 'react';\nimport s from './Loader.module.css';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Spiner = () => (\n  <div className={s.Loader}>\n    <Loader type=\"Bars\" color=\"#00BFFF\" height={100} width={100} />\n  </div>\n);\n\nexport default Spiner;\n","import { useState, useEffect } from 'react';\nimport s from './ImageGallery.module.css';\nimport PropTypes from 'prop-types';\nimport pixabayApi from '../../services/pixabayApi';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../Button';\nimport Modal from '../Modal';\nimport Spiner from '../Loader';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function ImageGallery({ imageName, pageScroll }) {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImg, setLargeImg] = useState('');\n\n  useEffect(() => {\n    if (!imageName) {\n      return;\n    }\n    setStatus(Status.PENDING);\n\n    pixabayApi\n      .fetchImage(imageName, page)\n      .then(data => {\n        if (data.hits.length > 0) {\n          setImages(data.hits);\n          setStatus(Status.RESOLVED);\n        } else {\n          setStatus(Status.REJECTED);\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [imageName]);\n\n  useEffect(() => {\n    if (page !== 1) {\n      setLoading(true);\n\n      pixabayApi\n        .fetchImage(imageName, page)\n        .then(data => {\n          setImages([...images, ...data.hits]);\n          setStatus(Status.RESOLVED);\n          pageScroll();\n        })\n        .catch(() => setStatus(Status.REJECTED))\n        .finally(() => setLoading(false));\n    }\n  }, [page]);\n\n  const handleClickButton = () => {\n    setPage(page + 1);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onImageClick = largeImageURL => {\n    setLargeImg(largeImageURL);\n    toggleModal();\n  };\n\n  if (status === 'idle') {\n    return <h2 className={s.Title}>Waiting for search name</h2>;\n  }\n\n  if (status === 'pending') {\n    return <Spiner />;\n  }\n\n  if (status === 'rejected') {\n    return <h2 className={s.Title}>Something was wrong please try again!</h2>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <>\n        <ul className={s.ImageGallery}>\n          {images.map(image => {\n            return (\n              <ImageGalleryItem\n                key={image.id}\n                image={image}\n                onImageClick={onImageClick}\n              />\n            );\n          })}\n        </ul>\n        {loading && <Spiner />}\n        {images.length >= 12 && (\n          <Button handleClickButton={handleClickButton} />\n        )}\n        {showModal && (\n          <Modal toggleModal={toggleModal} largeImg={largeImg}></Modal>\n        )}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  imageName: PropTypes.string,\n  pageScroll: PropTypes.func,\n};\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './App.module.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nexport default function App() {\n  const [imageName, setImageName] = useState('');\n\n  const handleFormSubmit = imageName => {\n    setImageName(imageName);\n  };\n\n  const pageScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div className={s.App}>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery imageName={imageName} pageScroll={pageScroll} />\n      <ToastContainer autoClose={2000} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1DN7S\",\"Title\":\"ImageGallery_Title__2-1oA\"};"],"sourceRoot":""}